select sum(attendance) as tot_attend from cfb_attendance;

select distinct cfb_coach.team, cfb_coach.coach from cfb_coach, cfb_weekly_rankings where (cfb_weekly_rankings.ap = '1' or cfb_weekly_rankings.bcs = '1') and cfb_coach.team = cfb_weekly_rankings.team and cfb_weekly_rankings.season = cfb_coach.season;

select FB2.team, FB2.season, FB2.stdev from (select cfb_weekly_rankings.team, cfb_weekly_rankings.season, stddev(cfb_weekly_rankings.ap) as stdev, count(cfb_weekly_rankings.ap) as count from cfb_weekly_rankings where (team, season) not in (select team, season from cfb_weekly_rankings where ap = 'NR') group by cfb_weekly_rankings.team, cfb_weekly_rankings.season order by stdev limit 1) FB, (select cfb_weekly_rankings.team, cfb_weekly_rankings.season, stddev(cfb_weekly_rankings.ap) as stdev, count(cfb_weekly_rankings.ap) as count from cfb_weekly_rankings where (team, season) not in (select team, season from cfb_weekly_rankings where ap = 'NR') group by cfb_weekly_rankings.team, cfb_weekly_rankings.season order by stdev) FB2 where FB.stdev = FB2.stdev;

select cfb_weekly_rankings.season, cfb_weekly_rankings.wk from cfb_weekly_rankings, (select rank from ((select ap as rank from cfb_weekly_rankings where team = 'Notre Dame' and ap != 'NR' order by ap+1 limit 1) union (select bcs as rank from cfb_weekly_rankings where team = 'Notre Dame' and bcs != 'NR' order by bcs+1 limit 1) union (select co as rank from cfb_weekly_rankings where team = 'Notre Dame' and co != 'NR' order by co+1 limit 1)) B order by B.rank limit 1) A where cfb_weekly_rankings.team = 'Notre Dame' and (cfb_weekly_rankings.ap = A.rank or cfb_weekly_rankings.bcs = A.rank or cfb_weekly_rankings.co = A.rank);

select cfb_odds.team, cfb_odds.opp, cfb_odds.season, cfb_odds.wk, abs(cfb_odds.spread) from cfb_odds, (select * from cfb_odds where spread != 'NULL' order by spread limit 1)A where abs(cfb_odds.spread) = abs(A.spread);

select B.team, B.wins as pct, B.games_played as games from (select * from (select Q.team, sum(Q.did_win)/count(Q.did_win) as wins, count(Q.did_win) as games_played from (select P.team, (P.pts > P.opp_pts) as did_win from ((select cfb_game.team, cfb_game.opp, cfb_game.pts, cfb_game.opp_pts, cfb_game.season, cfb_game.wk from cfb_game, cfb_gameday where MONTH(cfb_gameday.gday) = 11 and cfb_game.team = cfb_gameday.team  and cfb_game.opp = cfb_gameday.opp and cfb_game.season = cfb_gameday.season and cfb_game.wk = cfb_gameday.wk) union (select cfb_game.opp as team, cfb_game.team as opp, cfb_game.opp_pts as pts, cfb_game.pts as opp_pts, cfb_game.season, cfb_game.wk from cfb_game, cfb_gameday where MONTH(cfb_gameday.gday) = 11 and cfb_game.team = cfb_gameday.team  and cfb_game.opp = cfb_gameday.opp and cfb_game.season = cfb_gameday.season and cfb_game.wk = cfb_gameday.wk)) P) Q group by Q.team order by sum(Q.did_win)/count(Q.did_win)) R where R.games_played > 20 limit 1) A, (select Q.team, sum(Q.did_win)/count(Q.did_win) as wins, count(Q.did_win) as games_played from (select P.team, (P.pts > P.opp_pts) as did_win from ((select cfb_game.team, cfb_game.opp, cfb_game.pts, cfb_game.opp_pts, cfb_game.season, cfb_game.wk from cfb_game, cfb_gameday where MONTH(cfb_gameday.gday) = 11 and cfb_game.team = cfb_gameday.team  and cfb_game.opp = cfb_gameday.opp and cfb_game.season = cfb_gameday.season and cfb_game.wk = cfb_gameday.wk) union (select cfb_game.opp as team, cfb_game.team as opp, cfb_game.opp_pts as pts, cfb_game.pts as opp_pts, cfb_game.season, cfb_game.wk from cfb_game, cfb_gameday where MONTH(cfb_gameday.gday) = 11 and cfb_game.team = cfb_gameday.team and cfb_game.opp = cfb_gameday.opp and cfb_game.season = cfb_gameday.season and cfb_game.wk = cfb_gameday.wk)) P) Q group by Q.team order by sum(Q.did_win)/count(Q.did_win)) B where A.wins = B.wins;

select cfb_conf.conf, sum(cfb_offensive_stats.pass_yds) as yds from cfb_offensive_stats, cfb_conf where cfb_conf.season = cfb_offensive_stats.season and cfb_conf.team = cfb_offensive_stats.team group by cfb_conf.conf order by yds desc limit 1;

select A.bowl from cfb_weekly_rankings, ((select team, bowl, season, wk from cfb_game where bowl !='NULL') union (select opp as team, bowl, season, wk from cfb_game where bowl !='NULL'))A where A.team = cfb_weekly_rankings.team and A.season = cfb_weekly_rankings.season and A.wk = cfb_weekly_rankings.wk and cfb_weekly_rankings.ap != 'NR' group by bowl order by avg(cfb_weekly_rankings.ap) desc limit 1;

select T.team as opp, T.games_won as wins from (select B.team, count(B.did_win) as games_played, sum(B.did_win) as games_won from cfb_conf, (select A.team, A.opp, A.season, A.wk, A.did_win, cfb_conf.conf as team_conf from cfb_conf, ((select team, opp, season, wk, (pts > opp_pts) as did_win from cfb_game) union (select opp as team, team as opp, season, wk, (pts < opp_pts) as did_win from cfb_game)) A where cfb_conf.team = A.team and cfb_conf.season = A.season and cfb_conf.conf = 'zAA') B where B.season = cfb_conf.season and B.opp = cfb_conf.team and (cfb_conf.in_bcs = "BCS" or cfb_conf.in_bcs = 'zAA') group by B.team order by games_won desc, B.team limit 1) P, (select B.team, count(B.did_win) as games_played, sum(B.did_win) as games_won from cfb_conf, (select A.team, A.opp, A.season, A.wk, A.did_win, cfb_conf.conf as team_conf from cfb_conf, ((select team, opp, season, wk, (pts > opp_pts) as did_win from cfb_game) union (select opp as team, team as opp, season, wk, (pts < opp_pts) as did_win from cfb_game)) A where cfb_conf.team = A.team and cfb_conf.season = A.season and cfb_conf.conf = 'zAA') B where B.season = cfb_conf.season and B.opp = cfb_conf.team and (cfb_conf.in_bcs = "BCS" or cfb_conf.in_bcs = 'zAA') group by B.team order by games_won desc, B.team) T where P.games_won = T.games_won;

select R.coach, R.sspts, R.wins from (select cfb_coach.coach, sum(Q.pts) as sspts, count(Q.pts) as wins from cfb_coach, ((select team, opp, season, wk, pts from cfb_game where pts > opp_pts) union (select opp as team, team as opp, season, wk, opp_pts as pts from cfb_game where opp_pts > pts)) Q where cfb_coach.team = Q.team and cfb_coach.season = Q.season and cfb_coach.wk = Q.wk group by cfb_coach.coach) R where R.wins > 50 order by R.sspts limit 1;
